@page "/Account/Register"

@using System.ComponentModel.DataAnnotations
@inherits BaseAccount

<BlaterLogin T="InputModel" IsLogin="false" FormName="register" OnValidSubmit="RegisterUser">
    <FormInputs>

        <MudStaticTextField
            @bind-Value="@Input.Name"
            Adornment="Adornment.Start"
            AdornmentIcon="@Material.Outlined.Email"
            autocomplete="name"
            Class="pb-2"
            Margin="Margin.Dense"
            Variant="Variant.Outlined"
            Label="Name"
            Placeholder="name"
            For="() => Input.Name"/>

        <MudStaticTextField
            @bind-Value="@Input.Email"
            Adornment="Adornment.Start"
            AdornmentIcon="@Material.Outlined.Email"
            autocomplete="username"
            Class="pb-2"
            Margin="Margin.Dense"
            Variant="Variant.Outlined"
            Label="Email"
            Placeholder="static@mail.com"
            For="() => Input.Email"/>

        <MudStaticTextField
            @bind-Value="@Input.Password"
            Adornment="Adornment.Start"
            AdornmentIcon="@Material.Outlined.Lock"
            autocomplete="current-password"
            Class="pb-2"
            Margin="Margin.Dense"
            Variant="Variant.Outlined"
            Label="Password"
            Placeholder="********"
            InputType="InputType.Password"
            For="() => Input.Password"/>

        <MudStaticTextField
            @bind-Value="@Input.ConfirmPassword"
            Adornment="Adornment.Start"
            AdornmentIcon="@Material.Outlined.Lock"
            autocomplete="confirm-current-password"
            Class="pb-2"
            Margin="Margin.Dense"
            Variant="Variant.Outlined"
            Label="Confirm password"
            Placeholder="********"
            InputType="InputType.Password"
            For="() => Input.ConfirmPassword"/>
    </FormInputs>
</BlaterLogin>

@code
{
    [SupplyParameterFromForm(FormName = "register")]
    private InputModel Input { get; set; } = new();

    public async Task RegisterUser()
    {
        await Register(Input.Email, Input.Name, Input.Password);
    }

    protected sealed class InputModel
    {
        [Required]
        [Display(Name = "Email")]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [Display(Name = "Name")]
        public string Name { get; set; } = "";

        [Required]
        [StringLength(100, ErrorMessage = "The {0} must be at least {2} and at max {1} characters long.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } = "";

        [DataType(DataType.Password)]
        [Display(Name = "Confirm password")]
        [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]
        public string ConfirmPassword { get; set; } = "";
    }
}