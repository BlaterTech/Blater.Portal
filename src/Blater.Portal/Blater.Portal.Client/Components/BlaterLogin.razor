@typeparam T where T : class

<MudPaper Elevation="5" Class="pa-16">
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12">
            <MudStack Row="true" Spacing="2" Class="justify-center" AlignItems="AlignItems.Center">
                <BlaterLogo IconWidth="70"/>
            </MudStack>
        </MudItem>
        <MudItem>
            <EditForm Model="typeof(T)" method="post" OnValidSubmit="@OnValidSubmit" FormName="@FormName">
                <DataAnnotationsValidator/>

                <MudText Typo="Typo.h4" Class="mb-4">@(IsLogin ? "Log in to your Account" : "Create your Account")</MudText>

                <MudStack Row="true" Justify="Justify.SpaceEvenly" Spacing="1">
                    @if (EnabledOAuth)
                    {
                        <MudStaticButton
                            StartIcon="@Custom.Brands.GitHub"
                            IconColor="Color.Error"
                            Variant="Variant.Filled"
                            Disabled="true">
                            Github
                        </MudStaticButton>
                        <MudStaticButton
                            StartIcon="@Custom.Brands.Google"
                            IconColor="Color.Info"
                            Variant="Variant.Filled"
                            Disabled="true">
                            Google
                        </MudStaticButton>
                        <MudStaticButton
                            StartIcon="@Custom.Brands.Discord"
                            IconColor="Color.Info"
                            Variant="Variant.Filled"
                            Disabled="true">
                            Discord
                        </MudStaticButton>
                        @OAuthButtons
                    }
                </MudStack>

                <MudStack Row="true" Class="ma-4" Justify="Justify.SpaceAround" AlignItems="AlignItems.Center" Wrap="Wrap.Wrap">
                    <MudDivider Class="d-flex flex-grow-1" DividerType="DividerType.Middle" Style=@($"border-color: var(--mud-pallet-primary)")/>
                    <MudText Typo="Typo.caption"> or </MudText>
                    <MudDivider Class="d-flex flex-grow-1" DividerType="DividerType.Middle" Style=@($"border-color: var(--mud-pallet-primary)")/>
                </MudStack>

                @FormInputs

                <MudStaticButton
                    Class="my-4"
                    FormAction="FormAction.Submit"
                    Color="Color.Primary"
                    Variant="Variant.Filled"
                    FullWidth="true">
                    Continue
                </MudStaticButton>
                
                <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="2">
                    <MudText Typo="Typo.body2">@(IsLogin ? "Don't have an account?" : "I have an account?")</MudText>
                    <MudLink Href="@(IsLogin ? "/Account/Register" : "/Account/Login")" Typo="Typo.body2" Color="Color.Primary" Underline="Underline.None">
                        <b>@(IsLogin ? "Create an account" : "Login to your account")</b>
                    </MudLink>
                </MudStack>
            </EditForm>
        </MudItem>
    </MudGrid>
</MudPaper>

@code {

    [Parameter]
    public RenderFragment? OAuthButtons { get; set; }

    [Parameter]
    public bool EnabledOAuth { get; set; } = true;

    [Parameter]
    public RenderFragment? FormInputs { get; set; }

    [Parameter]
    [EditorRequired]
    public EventCallback<EditContext> OnValidSubmit { get; set; }

    [Parameter]
    [EditorRequired]
    public string FormName { get; set; } = null!;

    [Parameter]
    [EditorRequired]
    public bool IsLogin { get; set; }
}