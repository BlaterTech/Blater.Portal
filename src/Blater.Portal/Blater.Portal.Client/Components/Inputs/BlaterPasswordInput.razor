<MudTextField
    T="string"
    InputType="@_passwordInput"
    AdornmentIcon="@_passwordInputIcon"
    OnAdornmentClick="ShowPassword"
    Value="@_password"
    ValueChanged="@PasswordChanged"
    Adornment="Adornment.End"
    Variant="Variant.Filled"
    Label="Password"/>

@code {
    
    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }
    
    bool _isShow;
    InputType _passwordInput = InputType.Password;
    string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
    string _password = string.Empty;
    
    void ShowPassword()
    {
        if (_isShow)
        {
            _isShow = false;
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInput = InputType.Password;
        }
        else
        {
            _isShow = true;
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInput = InputType.Text;
        }
    }
    
    private async Task PasswordChanged(string password)
    {
        _password = password;
        
        var hashedPassword = BCrypt.Net.BCrypt.HashPassword(password);
        
        await ValueChanged.InvokeAsync(hashedPassword);
    }
}