@using Blater.Portal.Core.Extensions
@inherits LayoutComponentBase

@layout BlaterMainLayout

<MudLayout>
    <BlaterAuthorizeView @ref="@_blaterAuthorizeView">
        <Authorized>
            @{
                var blaterUserToken = context.User.GetUserAuthenticated();
                <MudAppBar Elevation="1">
                    <MudIconButton Icon="@Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
                    <MudSpacer/>

                    <MudIconButton
                        Icon="@Material.Outlined.Notifications"
                        Color="Color.Inherit"/>

                    <MudText Class="pr-2">
                        Olá, @(blaterUserToken.Name)!
                    </MudText>

                    <MudAvatar>
                        <MudImage Src="@blaterUserToken.AvatarImage"/>
                    </MudAvatar>
                </MudAppBar>
            }
            <MudDrawer @bind-Open="@_drawerOpen"
                       Elevation="2"
                       Variant="DrawerVariant.Mini"
                       Class="overflow-hidden"
                       MiniWidth="50px">
                <MudDrawerHeader Class="pa-1 d-flex align-center justify-center">
                    @if (_drawerOpen)
                    {
                        <BlaterLogo/>
                    }
                    else
                    {
                        <BlaterLogo OnlyIcon="true"/>
                    }
                </MudDrawerHeader>

                @{
                    @*foreach (var route in Routes)
                        {
                            if (route.IsSubMenu)
                            {
                                <MudNavGroup
                                    Icon="@route.Icon"
                                    Title="@route.Name"
                                    ExpandIcon="@ExpandIcon">
                                    @foreach (var subRoute in route.ChildRoutes)
                                    {
                                        <MudNavLink
                                            Icon="@subRoute.Icon"
                                            Href="@subRoute.Route"
                                            Match="NavLinkMatch.Prefix">
                                            <MudText>
                                                @subRoute.Name
                                            </MudText>
                                        </MudNavLink>
                                    }
                                </MudNavGroup>
                            }
                            else
                            {
                                <MudNavLink
                                    Icon="@route.Icon"
                                    Href="@route.Route"
                                    Match="NavLinkMatch.Prefix">
                                    <MudText>
                                        @route.Name
                                    </MudText>
                                </MudNavLink>
                            }
                        }*@
                }

                <MudSpacer/>

                @*<MudNavLink
                        Icon="@Material.Filled.ExitToApp"
                        Match="NavLinkMatch.Prefix"
                        IconColor="Color.Error"
                        OnClick="@(async e => await AuthenticationService.Logout())">
                        <MudText Color="Color.Error">
                            Sair
                        </MudText>
                    </MudNavLink>*@
            </MudDrawer>
            <MudMainContent>
                <MudContainer Class="mt-8 px-8" MaxWidth="MaxWidth.ExtraExtraLarge">
                    @Body
                </MudContainer>
            </MudMainContent>
        </Authorized>
        <NotAuthorized>
            <p>Permission is required access this content</p>
        </NotAuthorized>
    </BlaterAuthorizeView>
</MudLayout>