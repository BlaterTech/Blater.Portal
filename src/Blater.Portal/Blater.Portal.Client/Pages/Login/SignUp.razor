@page "/sign-up"
@using Blater.Frontend.Services
@using Blater.SDK.Contracts.Authentication.Request
@using Blater.SDK.Contracts.Common.Request
@using Blater.SDK.Interfaces.BlaterAuth


@layout LoginLayout

<BlaterLogin
    IsLogin="false"
    Callback="@(x => Submit(x.Email, x.Name, x.Password))"
    ErrorMessage="@ErrorMessage"/>

@code
{
    #pragma warning disable CA2252
    [Inject]
    protected AuthenticationService AuthenticationService { get; set; } = null!;

    [Inject]
    protected IBlaterAuthLoginStoreEndpoints LoginStore { get; set; } = null!;
    
    private string? ErrorMessage { get; set; }

    private async Task Submit(string email, string name, string password)
    {
        var registerBlaterUserRequest = new RegisterBlaterUserRequest
        {
            Email = email,
            Name = name,
            Password = password
        };

        var register = await LoginStore.Register(registerBlaterUserRequest);
        
        if (register.Failure)
        {
            ErrorMessage = "Error in Register";
            StateHasChanged();
            return;
        }

        var authRequest = new AuthRequest
        {
            Email = email,
            Password = password
        };

        var loginLocal = await LoginStore.LoginLocal(authRequest);

        if (loginLocal.Failure)
        {
            ErrorMessage = "Error in Login Local";
            StateHasChanged();
            return;
        }

        var jwt = loginLocal.Value;

        if (string.IsNullOrWhiteSpace(jwt))
        {
            ErrorMessage = "Error jwt is nullable";
            StateHasChanged();
            return;
        }

        var result = await AuthenticationService.LoginJwt(jwt);
        if (!result.Success)
        {
            ErrorMessage = result.Message;
            StateHasChanged();
            return;
        }
        
        StateHasChanged();
    }
    #pragma warning restore CA2252
}