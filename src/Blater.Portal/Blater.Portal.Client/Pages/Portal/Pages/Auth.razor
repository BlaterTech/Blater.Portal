@page "/auth"
@using Blater.Extensions
@using Blater.Frontend.Client.Extensions

@layout BlaterPortalPrimaryLayout

<PageTitle>Auth</PageTitle>

<BlaterAuthorizeView @ref="@_blaterAuthorizeView" Roles="@_roles" Permissions="@_permissions">
    <Authorized>
        <h1>You are authenticated using BlaterAuthorizedView</h1>
        <br/>
        <p>=== Default ===</p>
        <p>UserId -> @context.User.Claims.FirstOrDefault(x => x.Type == "UserId")?.Value!</p>
        <p>Role -> @context.User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role)?.Value!</p>
        <p>AuthenticationType -> @context.User.Identity?.AuthenticationType!</p>
        <p>IsAuthenticated -> @context.User.Identity?.IsAuthenticated!</p>
        <p>BlaterUserToken -> @context.User.GetUserAuthenticated().ToJson()</p>
        <br/>
        <p>=== Features ===</p>
        <p>GetUserAuthenticated -> @_blaterAuthorizeView?.GetUserAuthenticated().ToJson()</p>
        <p>GetUserAuthenticated -> @_blaterAuthorizeView?.GetUserAuthenticated().Jwt</p>
    </Authorized>
    <NotAuthorized>
        <h1>You are not authenticated using BlaterAuthorizedView</h1>
    </NotAuthorized>
</BlaterAuthorizeView>

@code{

    readonly List<string> _roles = ["ProjectOwner"];
    readonly List<string> _permissions = ["ProjectOwner:Create"];

    BlaterAuthorizeView? _blaterAuthorizeView;
}


